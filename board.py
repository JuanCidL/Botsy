from PIL import Image, ImageDraw, ImageFont# Definir los colores del tablerocolor1 = (255, 255, 255) # Blancocolor2 = (0, 0, 0) # Negrocolor3 = (255, 0, 0) # Rojo# Definir el tamaño de cada casillasize = 50offset = size//2# Crear una imagen vacía de 450x450 píxelesimg = Image.new('RGB', (450, 450), color3)# Crear un objeto para dibujar en la imagendraw = ImageDraw.Draw(img)draw.rounded_rectangle((offset-5, offset-5, 400+offset+5, 400+offset+5),                       outline='blue',                       radius=20,                       width = 1)# Dibujar el tablero de ajedrez con un bucle anidadofor i in range(8):  for j in range(8):    # Calcular la posición de la esquina superior izquierda de cada casilla    x1 = i * size + offset    y1 = j * size + offset    # Calcular la posición de la esquina inferior derecha de cada casilla    x2 = x1 + size    y2 = y1 + size    # Alternar el color de cada casilla según la paridad de i y j    if (i + j) % 2 == 0:      color = color1    else:      color = color2        # Dibujar un rectángulo con el color correspondiente    draw.rectangle([x1, y1, x2, y2], fill=color)# Cargar una fuente para escribir las coordenadas#font = ImageFont.truetype("arial.ttf", 20)# Definir las letras y los números para las coordenadasletters = ["a", "b", "c", "d", "e", "f", "g", "h"]numbers = ["8", "7", "6", "5", "4", "3", "2", "1"]# Escribir las letras debajo del tablero con un buclefor i in range(8):  # Calcular la posición del centro de cada letra  x = i * size + 75  y = 410    # Escribir la letra con color negro y fuente arial  draw.text((x, y), letters[i], fill=color2, )#font=font)    # Escribir los números al lado izquierdo del tablero con otro bucle  for j in range(8):  # Calcular la posición del centro de cada número    x = 20    y = j * size + 65      # Escribir el número con color negro y fuente arial    draw.text((x, y), numbers[j], fill=color2)#, font=font)# Guardar la imagen como tablero.pngimg.save("tablero.png")